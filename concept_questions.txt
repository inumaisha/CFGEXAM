



SECTION 1
1.1 Software Development Life Cycle.

1.2  ZeroDivisionError.

1.3 git push.

1.4  absence of a value or an unknown value.

1.5 Two responsibilities of a Scrum Master:
-keep everyone on track and informed
- host stand up meetings

1.6 Two debugging methods:
-Print Statements - use check quickly or for simple problems
- breakpoints - to isolate the error 

1.7 if  price or cash_given is not a numeric value then an error will occur. a try-except block can be used to implement exception handling

1.8 Git branching:
-allows for separate lines of development within a repository.
-allows people to collaborate and make changes without interfering with each other.
-developers can create, merge, and delete branches when necessary

1.9 Designing a restaurant ordering system requires features:
menu managing
user authentication/user accounts
order placement
payment processing
inventory management

Considerations:
user-friendly interfaces
security
order accuracy
real time updates for orders

Components/tools needed:
a database
web app
payment gateway
backend server
notification system


SECTION 2

def is_isogram(input_string):
    input_string = input_string.lower()

    #set to check for duplicate characters
    return len(input_string) == len(set(input_string))



test cases---------------------

def test_is_isogram():
     assert is_isogram("isogram") == True  
     # All letters are unique

    assert is_isogram("uncopyrightable") == True  
    # No letter is repeated

    assert is_isogram("ambidextrously") == True  
    # No letter is repeated

    assert is_isogram("chibi") == Fale  
    #my rabbits name where i is repeated
    
    assert is_isogram("pillow") == False  
    #my rabbits name where L is repeated
    
    assert is_isogram("cushion") == True  
    #my cats name which has no repeated letters
    
    assert is_isogram("chaii") == False  
    # my rabbits name where there is repeated letters 'i'
    
    assert is_isogram("maisha") == False  
    # my name where 'a' is repeated
    
    assert is_isogram("mo") == True  
    # my partners name where there are no repeated letters
    
    assert is_isogram("python") == True  
    # All letters are unique
    



